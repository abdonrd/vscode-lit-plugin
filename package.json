{
    "name": "lit-plugin",
    "private": true,
    "displayName": "lit-plugin",
    "description": "Syntax highlighting, type checking and code completion for lit-html",
    "version": "0.0.15",
    "publisher": "runem",
    "icon": "documentation/asset/lit-plugin@256w.png",
    "engines": {
        "vscode": "^1.30.0"
    },
    "categories": [
        "Programming Languages"
    ],
    "homepage": "https://github.com/runem/vscode-lit-plugin",
    "bugs": {
        "url": "https://github.com/runem/ts-lit-plugin/issues",
        "email": "runemehlsen@gmail.com"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/runem/vscode-lit-plugin.git"
    },
    "main": "./out/extension",
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "postinstall": "node ./node_modules/vscode/bin/install",
        "publish": "vsce publish"
    },
    "devDependencies": {
        "typescript": "3.3.3",
        "vscode": "^1.1.29",
        "tslint": "^5.12.1",
        "@types/node": "^10.12.24",
        "vsce": "^1.57.0"
    },
    "dependencies": {
        "ts-lit-plugin": "^0.0.28"
    },
    "activationEvents": [
        "onLanguage:javascript",
        "onLanguage:javascriptreact",
        "onLanguage:typescript",
        "onLanguage:typescriptreact"
    ],
    "contributes": {
        "configuration": [
            {
                "id": "lit-plugin",
                "title": "lit-plugin",
                "properties": {
                    "lit-plugin.disable": {
                        "type": "boolean",
                        "description": "Completely disable this plugin.",
                        "default": false
                    },
                    "lit-plugin.format.disable": {
                        "type": "boolean",
                        "description": "Disable formatting the HTML on code reformat.",
                        "default": false
                    },
                    "lit-plugin.htmlTemplateTags": {
                        "type": "array",
                        "description": "List of template tags to enable html support in.",
                        "items": {
                            "type": "string",
                            "description": "Template tag function names."
                        },
                        "default": [
                            "html",
                            "raw"
                        ]
                    },
                    "lit-plugin.externalHtmlTagNames": {
                        "type": "array",
                        "description": "List of html tag names that you expect to be present at all times. These tag names, including its attributes, are not checked at all.",
                        "items": {
                            "type": "string",
                            "description": "Tag name."
                        }
                    },
                    "lit-plugin.skipMissingImports": {
                        "type": "boolean",
                        "description": "Skip reporting missing imports of custom elements.",
                        "default": false
                    },
                    "lit-plugin.skipUnknownHtmlTags": {
                        "type": "boolean",
                        "description": "Skip reporting unknown html tags.",
                        "default": false
                    },
                    "lit-plugin.skipUnknownHtmlAttributes": {
                        "type": "boolean",
                        "description": "Skip reporting unknown html attributes.",
                        "default": false
                    },
                    "lit-plugin.skipTypeChecking": {
                        "type": "boolean",
                        "description": "Skip type checking of attributes.",
                        "default": false
                    }
                }
            }
        ],
        "typescriptServerPlugins": [
            {
                "name": "ts-lit-plugin",
                "enableForWorkspaceTypeScriptVersions": true
            }
        ],
        "jsonValidation": [
            {
                "fileMatch": "jsconfig*.json",
                "url": "./schemas/tsconfig.schema.json"
            },
            {
                "fileMatch": "tsconfig*.json",
                "url": "./schemas/tsconfig.schema.json"
            }
        ],
        "grammars": [
            {
                "injectTo": [
                    "source.js",
                    "source.js.jsx",
                    "source.jsx",
                    "source.ts",
                    "source.tsx",
                    "text.html.basic"
                ],
                "scopeName": "inline.lit-plugin",
                "path": "./syntaxes/lit-plugin.json",
                "embeddedLanguages": {
                    "meta.embedded.block.html": "html",
                    "meta.embedded.block.css": "css",
                    "source.css": "css"
                }
            },
            {
                "injectTo": [
                    "source.js",
                    "source.js.jsx",
                    "source.jsx",
                    "source.ts",
                    "source.tsx",
                    "text.html.basic"
                ],
                "scopeName": "inline.lit-plugin.string.injection",
                "path": "./syntaxes/lit-plugin-string-injection.json",
                "embeddedLanguages": {
                    "meta.template.expression.ts": "typescript"
                }
            },
            {
                "injectTo": [
                    "source.js",
                    "source.js.jsx",
                    "source.jsx",
                    "source.ts",
                    "source.tsx",
                    "text.html.basic"
                ],
                "scopeName": "inline.lit-plugin.style.injection",
                "path": "./syntaxes/lit-plugin-style-injection.json",
                "embeddedLanguages": {
                    "meta.template.expression.ts": "typescript"
                }
            },
            {
                "injectTo": [
                    "source.js",
                    "source.js.jsx",
                    "source.jsx",
                    "source.ts",
                    "source.tsx",
                    "text.html.basic"
                ],
                "scopeName": "inline.lit-plugin-svg",
                "path": "./syntaxes/lit-plugin-svg.json",
                "embeddedLanguages": {
                    "meta.embedded.block.svg": "xml"
                }
            }
        ]
    }
}
